{"ast":null,"code":"var _jsxFileName = \"/home/garrett/GitHub/mental-math/src/History.js\";\nimport React from 'react'; // Ramda\n\nimport * as R from 'ramda'; // Latex\n\nimport 'katex/dist/katex.min.css';\nimport { InlineMath } from 'react-katex';\n\nlet History = props => {\n  let {\n    previousLatex,\n    prevoiusAnswers,\n    previousGuesses\n  } = props;\n  let outputInFinalUnits = unitConvertor(input, outputUnit, unitsSet);\n  let outputInFinalUnitsFactored = unitConvertorFactored(input, outputUnit, unitsSet); // Units options\n\n  let unitsFill = R.map(x => {\n    if (x.units === 'GN') {\n      return null;\n    } else {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: x.units,\n        value: x.units,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 87\n        }\n      }, x.units);\n    }\n  }, unitsSet); // Each input value contains (number, numberExponent, units, unitsExponent,meterExponent,meterValue) properties\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: 'checkbox',\n    checked: GNis1,\n    onChange: handleGNis1Toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), \"\\\\(\\\\ G_N=1\\\\)\"), !GNis1 && /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Output Unit \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"outputUnit\",\n    id: \"outputUnit\",\n    value: outputUnit ? outputUnit : undefined,\n    onChange: handleOutputUnitChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, unitsFill)), input[0] && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Input Factors\"), /*#__PURE__*/React.createElement(LatexInput, {\n    input: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Net Result\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"no-li-marks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LatexOutput, {\n    input: outputInFinalUnits,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), outputInFinalUnits.unitsExponent !== 1 && outputInFinalUnits.unitsExponent !== 0 && outputInFinalUnits.units !== 'GN' && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InlineMath, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(LatexOutputFactored, {\n    input: outputInFinalUnitsFactored,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Reset\",\n    onClick: () => {\n      handleReset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default History;","map":{"version":3,"sources":["/home/garrett/GitHub/mental-math/src/History.js"],"names":["React","R","InlineMath","History","props","previousLatex","prevoiusAnswers","previousGuesses","outputInFinalUnits","unitConvertor","input","outputUnit","unitsSet","outputInFinalUnitsFactored","unitConvertorFactored","unitsFill","map","x","units","GNis1","handleGNis1Toggle","undefined","handleOutputUnitChange","unitsExponent","handleReset"],"mappings":"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","sourcesContent":["import React from 'react'\n\n// Ramda\nimport * as R from 'ramda';\n\n// Latex\nimport 'katex/dist/katex.min.css';\nimport { InlineMath } from 'react-katex';\n\n\n\nlet History = (props) => {\n\n  let { previousLatex, prevoiusAnswers, previousGuesses } = props;\n\n  let outputInFinalUnits = unitConvertor(input, outputUnit, unitsSet);\n  let outputInFinalUnitsFactored = unitConvertorFactored(input, outputUnit, unitsSet);\n\n\n  // Units options\n  let unitsFill = R.map((x) => { if (x.units === 'GN') { return null } else { return (<option key={x.units} value={x.units}>{x.units}</option>) } }, unitsSet);\n\n\n  // Each input value contains (number, numberExponent, units, unitsExponent,meterExponent,meterValue) properties\n\n\n\n\n  return (\n    <div>\n      <label>\n        <input\n          type={'checkbox'}\n          checked={GNis1}\n          onChange={handleGNis1Toggle} />\n      \\(\\ G_N=1\\)\n      </label>\n      {!GNis1 &&\n        <form>\n          <label>Output Unit </label>\n          <select\n            name=\"outputUnit\"\n            id=\"outputUnit\"\n            value={outputUnit ? outputUnit : undefined}\n            onChange={handleOutputUnitChange}\n          >\n            {unitsFill}\n          </select>\n        </form>\n      }\n\n\n\n      {input[0]\n        &&\n        <div>\n          <h4>\n            Input Factors\n           </h4>\n          <LatexInput\n            input={input}\n          />\n\n          <h4>\n            Net Result\n           </h4>\n          <ul className={\"no-li-marks\"}>\n            <li>\n              <LatexOutput\n                input={outputInFinalUnits}\n              />\n              {outputInFinalUnits.unitsExponent !== 1 && outputInFinalUnits.unitsExponent !== 0 && outputInFinalUnits.units !== 'GN'\n                &&\n                <span>\n                  <InlineMath>\n                    =\n              </InlineMath>\n                  <LatexOutputFactored\n                    input={outputInFinalUnitsFactored}\n                  />\n                </span>\n              }\n            </li>\n          </ul>\n\n          <input\n            type=\"button\"\n            value=\"Reset\"\n            onClick={() => {\n              handleReset()\n            }\n            }\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default History"]},"metadata":{},"sourceType":"module"}