{"ast":null,"code":"var _jsxFileName = \"/home/garrett/GitHub/mental-math/src/CurrentQuestion.js\";\nimport React, { Component } from 'react'; // Ramda\n\nimport * as R from 'ramda';\nlet initialState = {\n  meterValue: null,\n  presetExponent: 1,\n  presetName: null,\n  guess: null\n};\n\nclass Presets extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChange = event => {\n      let {\n        name,\n        value\n      } = event.target; // The [ ] brackets here are the setState synatx\n\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    let {\n      guess,\n      presetExponent,\n      presetName\n    } = this.state;\n    let {\n      handleSubmit,\n      presetsSet,\n      currentNumber\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"number\",\n      id: \"number\",\n      value: guess || '',\n      onChange: this.handleChange,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: () => {\n        if (guess !== 0) {\n          handleSubmit(this.state);\n          this.setState(initialState);\n        } else {\n          alert('Please enter a number/non-zero overall exponent');\n          this.setState(initialState);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Clear\",\n      onClick: () => {\n        this.setState(initialState);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Presets;","map":{"version":3,"sources":["/home/garrett/GitHub/mental-math/src/CurrentQuestion.js"],"names":["React","Component","R","initialState","meterValue","presetExponent","presetName","guess","Presets","state","handleChange","event","name","value","target","setState","render","handleSubmit","presetsSet","currentNumber","props","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AAIA,IAAIC,YAAY,GAAG;AACfC,EAAAA,UAAU,EAAE,IADG;AAEfC,EAAAA,cAAc,EAAE,CAFD;AAGfC,EAAAA,UAAU,EAAE,IAHG;AAIfC,EAAAA,KAAK,EAAE;AAJQ,CAAnB;;AAOA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BQ,KAF4B,GAEpBN,YAFoB;;AAAA,SAK5BO,YAL4B,GAKbC,KAAK,IAAI;AACpB,UAAI;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACG,MAA5B,CADoB,CAEpB;;AACA,WAAKC,QAAL,CAAc;AACZ,SAACH,IAAD,GAAQC;AADI,OAAd;AAGD,KAXyB;AAAA;;AAa5BG,EAAAA,MAAM,GAAG;AAEL,QAAI;AAAET,MAAAA,KAAF;AAASF,MAAAA,cAAT;AAAyBC,MAAAA;AAAzB,QAAwC,KAAKG,KAAjD;AACA,QAAI;AAAEQ,MAAAA,YAAF;AAAgBC,MAAAA,UAAhB;AAA4BC,MAAAA;AAA5B,QAA8C,KAAKC,KAAvD;AAIA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHM,eAIN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,EAAE,EAAC,QAHL;AAIE,MAAA,KAAK,EAAEb,KAAK,IAAI,EAJlB;AAKE,MAAA,QAAQ,EAAE,KAAKG,YALjB;AAME,MAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJM,CAFJ,eAiBJ;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIH,KAAK,KAAG,CAAZ,EAAe;AACbU,UAAAA,YAAY,CACV,KAAKR,KADK,CAAZ;AAGA,eAAKM,QAAL,CAAcZ,YAAd;AACD,SALD,MAMK;AACHkB,UAAAA,KAAK,CAAC,iDAAD,CAAL;AACA,eAAKN,QAAL,CAAcZ,YAAd;AACD;AACF,OAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBI,eAkCJ;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKY,QAAL,CAAcZ,YAAd;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCI,CAFJ;AA8CH;;AAlE2B;;AAuEhC,eAAeK,OAAf","sourcesContent":["import React, { Component } from 'react'\n\n// Ramda\nimport * as R from 'ramda';\n\n\n\nlet initialState = {\n    meterValue: null,\n    presetExponent: 1,\n    presetName: null,\n    guess: null,\n};\n\nclass Presets extends Component {\n\n    state = initialState;\n\n\n    handleChange = event => {\n        let { name, value } = event.target\n        // The [ ] brackets here are the setState synatx\n        this.setState({\n          [name]: value,\n        })\n      }\n\n    render() {\n\n        let { guess, presetExponent, presetName } = this.state;\n        let { handleSubmit, presetsSet, currentNumber } = this.props;\n\n\n\n        return (\n\n            <div>\n                \n                <form>\n\n\n          <label>Answer</label>\n          <input\n            type=\"number\"\n            name=\"number\"\n            id=\"number\"\n            value={guess || ''}\n            onChange={this.handleChange}\n            autoFocus />\n\n\n        </form>\n\n        <input\n          type=\"button\"\n          value=\"Submit\"\n          onClick={() => {\n            if (guess!==0) {\n              handleSubmit(\n                this.state\n              );\n              this.setState(initialState);\n            }\n            else {\n              alert('Please enter a number/non-zero overall exponent');\n              this.setState(initialState);\n            }\n          }\n          }\n        />\n        <input\n          type=\"button\"\n          value=\"Clear\"\n          onClick={() => {\n            this.setState(initialState);\n          }}\n        />\n\n            </div>\n        );\n    };\n\n}\n\n\nexport default Presets"]},"metadata":{},"sourceType":"module"}