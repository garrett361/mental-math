{"ast":null,"code":"var _jsxFileName = \"/home/garrett/GitHub/mental-math/src/App.js\";\nimport React, { Component } from 'react'; // Components\n\nimport InputForm from './InputForm';\nimport OutputTable from './OutputTable';\nimport Presets from './Presets'; // Importing units and presets\n\nimport unitsSet from './data/unitsSet';\nimport presetsSet from './data/presetsSet';\nlet initialState = {\n  input: [],\n  outputUnit: 'm',\n  GNis1: false\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleSubmit = x => {\n      this.setState({\n        input: [...this.state.input, x]\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState(initialState);\n    };\n\n    this.handleOutputUnitChange = event => {\n      let {\n        value\n      } = event.target;\n      this.setState({\n        outputUnit: value\n      });\n    };\n\n    this.handleGNis1Toggle = () => {\n      this.setState({\n        GNis1: !this.state.GNis1\n      });\n\n      if (this.state.GNis1) {\n        this.setState({\n          outputUnit: 'm'\n        });\n      } else {\n        this.setState({\n          outputUnit: 'GN'\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      input,\n      outputUnit,\n      GNis1\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Mental Math\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Simple mental math practice.\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Current Question\"), /*#__PURE__*/React.createElement(CurrentQuestiosn, {\n      handleSubmit: this.handleSubmit,\n      presetsSet: presetsSet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Manual Input\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, \"Exponential notation can be used as in 1.23e4 \\\\(=1.23\\\\times 10^\", 4, \"\\\\).\"), /*#__PURE__*/React.createElement(InputForm, {\n      handleSubmit: this.handleSubmit,\n      unitsSet: unitsSet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Output\"), /*#__PURE__*/React.createElement(OutputTable, {\n      input: input,\n      GNis1: GNis1,\n      handleGNis1Toggle: this.handleGNis1Toggle,\n      unitsSet: unitsSet,\n      outputUnit: outputUnit,\n      handleReset: this.handleReset,\n      handleOutputUnitChange: this.handleOutputUnitChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garrett/GitHub/mental-math/src/App.js"],"names":["React","Component","InputForm","OutputTable","Presets","unitsSet","presetsSet","initialState","input","outputUnit","GNis1","App","state","handleSubmit","x","setState","handleReset","handleOutputUnitChange","event","value","target","handleGNis1Toggle","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\n// Components\nimport InputForm from './InputForm'\nimport OutputTable from './OutputTable';\nimport Presets from './Presets';\n\n// Importing units and presets\nimport unitsSet from './data/unitsSet'\nimport presetsSet from './data/presetsSet'\n\n\n\n\nlet initialState = {\n  input: [],\n  outputUnit: 'm',\n  GNis1: false,\n};\n\nclass App extends Component {\n\n  state = initialState;\n\n  // Code for handling the submit button and appending new data to input list\n\n  handleSubmit = (x) => {\n    this.setState({ input: [...this.state.input, x] });\n  };\n\n  handleReset = () => {\n    this.setState(initialState);\n  };\n\n  handleOutputUnitChange = (event) => {\n    let { value } = event.target\n    this.setState({ outputUnit: value });\n  };\n\n  handleGNis1Toggle = () => {\n    this.setState({\n      GNis1: !this.state.GNis1,\n    })\n    if (this.state.GNis1) {\n      this.setState({ outputUnit: 'm' })\n    } else { this.setState({ outputUnit: 'GN' }) }\n  }\n\n\n  render() {\n\n    let { input, outputUnit, GNis1 } = this.state;\n\n    return (\n\n      <div className=\"container\">\n        <h1>\n          Mental Math\n      </h1>\n\n        <p>\n          Simple mental math practice.\n      </p>\n\n        <h3>\n          Current Question\n      </h3>\n        <CurrentQuestiosn\n          handleSubmit={this.handleSubmit}\n          presetsSet={presetsSet} />\n\n        <h3>\n          Manual Input\n      </h3>\n      <p>\n      Exponential notation can be used as in 1.23e4 \\(=1.23\\times 10^{4}\\).\n      </p>\n        <InputForm\n          handleSubmit={this.handleSubmit}\n          unitsSet={unitsSet} />\n\n        <h3>\n          Output\n      </h3>\n        <OutputTable\n          input={input}\n          GNis1={GNis1}\n          handleGNis1Toggle={this.handleGNis1Toggle}\n          unitsSet={unitsSet}\n          outputUnit={outputUnit}\n          handleReset={this.handleReset}\n          handleOutputUnitChange={this.handleOutputUnitChange} />\n      </div>\n    )\n  }\n\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}