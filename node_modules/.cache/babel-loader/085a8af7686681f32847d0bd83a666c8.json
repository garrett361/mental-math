{"ast":null,"code":"var _jsxFileName = \"/home/garrett/GitHub/mental-math/src/App.js\";\nimport React, { Component } from 'react'; // Components\n\nimport History from './History';\nimport CurrentQuestion from './CurrentQuestion';\nlet initialState = {\n  previousLatex: [],\n  previousAnswers: [],\n  previousGuesses: [],\n  currentQuestionType: 0,\n  // Index for question type (multiplicaton, division etc.)\n  randInt1: Math.random(),\n  // Random integer between 0 and 1\n  randInt2: Math.random() // Random integer between 0 and 1\n\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n    this.questionTypes = 4;\n\n    this.handleSubmit = (guesslist, answerlist, latex) => {\n      this.setState({\n        previousGuesses: [...this.state.previousGuesses, guesslist]\n      });\n      this.setState({\n        previousAnswers: [...this.state.previousAnswers, answerlist]\n      });\n      this.setState({\n        previousLatex: [...this.state.previousLatex, latex]\n      });\n      this.setState({\n        currentQuestionType: Math.floor(Math.random() * this.questionTypes)\n      });\n      this.setState({\n        randInt1: Math.random()\n      });\n      this.setState({\n        randInt2: Math.random()\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState(initialState);\n    };\n  }\n\n  render() {\n    let {\n      input,\n      outputUnit,\n      GNis1\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Mental Math\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Simple mental math practice.\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Current Question\"), /*#__PURE__*/React.createElement(CurrentQuestion, {\n      handleSubmit: this.handleSubmit,\n      currentQuestionType: this.state.currentQuestionType,\n      randInt1: this.state.randInt1,\n      randInt2: this.state.randInt2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"History\"), /*#__PURE__*/React.createElement(History, {\n      previousLatex: this.state.previousLatex,\n      previousAnswers: this.state.previousAnswers,\n      previousGuesses: this.state.previousGuesses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Reset\",\n      onClick: () => {\n        this.handleReset();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"State\",\n      onClick: () => {\n        {\n          console.log(this.state);\n        }\n        ;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garrett/GitHub/mental-math/src/App.js"],"names":["React","Component","History","CurrentQuestion","initialState","previousLatex","previousAnswers","previousGuesses","currentQuestionType","randInt1","Math","random","randInt2","App","state","questionTypes","handleSubmit","guesslist","answerlist","latex","setState","floor","handleReset","render","input","outputUnit","GNis1","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\n// Components\nimport History from './History';\nimport CurrentQuestion from './CurrentQuestion';\n\n\n\nlet initialState = {\n  previousLatex: [],\n  previousAnswers: [],\n  previousGuesses: [],\n  currentQuestionType: 0, // Index for question type (multiplicaton, division etc.)\n  randInt1: Math.random(), // Random integer between 0 and 1\n  randInt2: Math.random(), // Random integer between 0 and 1\n};\n\nclass App extends Component {\n\n  state = initialState;\n\n  questionTypes = 4; //Number of different types of questions; see CurrentQuestions\n\n  // Code for handling the submit button and appending new data to input list\n\n  handleSubmit = (guesslist, answerlist, latex) => {\n    this.setState({ previousGuesses: [...this.state.previousGuesses, guesslist] });\n    this.setState({ previousAnswers: [...this.state.previousAnswers, answerlist] });\n    this.setState({ previousLatex: [...this.state.previousLatex, latex] });\n    this.setState({ currentQuestionType: Math.floor(Math.random() * this.questionTypes) });\n    this.setState({ randInt1: Math.random() });\n    this.setState({ randInt2: Math.random() });\n  };\n\n  handleReset = () => {\n    this.setState(initialState);\n  };\n\n  render() {\n\n    let { input, outputUnit, GNis1 } = this.state;\n    return (\n\n\n      <div className=\"container\">\n        <h1>\n          Mental Math\n      </h1>\n\n        <p>\n          Simple mental math practice.\n      </p>\n\n        <h2>\n          Current Question\n        </h2>\n        <CurrentQuestion\n          handleSubmit={this.handleSubmit}\n          currentQuestionType={this.state.currentQuestionType}\n          randInt1={this.state.randInt1}\n          randInt2={this.state.randInt2} />\n\n        <h3>\n          History\n      </h3>\n\n        <History\n          previousLatex={this.state.previousLatex}\n          previousAnswers={this.state.previousAnswers}\n          previousGuesses={this.state.previousGuesses}\n        />\n\n        <input\n          type=\"button\"\n          value=\"Reset\"\n          onClick={() => {\n            this.handleReset();\n          }\n          }\n        />\n\n        <input\n          type=\"button\"\n          value=\"State\"\n          onClick={() => {\n            { console.log(this.state) };\n          }\n          }\n        />\n\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}