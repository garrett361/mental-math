{"ast":null,"code":"import React from'react';// Ramda\nimport*as R from'ramda';// Latex\nimport'katex/dist/katex.min.css';import{InlineMath}from'react-katex';var History=function History(props){var previousLatex=props.previousLatex,previousAnswers=props.previousAnswers,previousGuesses=props.previousGuesses;// Table Header\nvar TableHeader=function TableHeader(){return/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Previous Question\"),/*#__PURE__*/React.createElement(\"th\",null,\"Answer\"),/*#__PURE__*/React.createElement(\"th\",null,\"Guess\"),/*#__PURE__*/React.createElement(\"th\",null,\"Error (Abs. Value)\")));};// Table Fill\nvar tableFill=previousLatex.map(function(x,index){var percentError=Math.abs(Math.trunc(100*(previousAnswers[index]-previousGuesses[index])/previousAnswers[index]));return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"td\",null,x),/*#__PURE__*/React.createElement(\"td\",null,previousAnswers[index]),/*#__PURE__*/React.createElement(\"td\",null,previousGuesses[index]),/*#__PURE__*/React.createElement(\"td\",null,percentError,\"%\"));});// Averaged accuracy\nvar errorList=previousAnswers.map(function(x,index){var percentError=Math.abs(Math.trunc(100*(previousAnswers[index]-previousGuesses[index])/previousAnswers[index]));return percentError;});var averagedError=Math.trunc(R.reduce(R.add,0,errorList))/errorList.length;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(TableHeader,null),/*#__PURE__*/React.createElement(\"tbody\",null,tableFill)),!isNaN(averagedError)&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Overall Error (Abs. Value)\"),/*#__PURE__*/React.createElement(InlineMath,null,averagedError+' \\\\% \\\\ \\\\mathrm{error} \\\\ \\\\mathrm{on} \\\\ '+errorList.length+'\\\\ \\\\mathrm{question(s)}')));};export default History;","map":{"version":3,"sources":["/home/garrett/GitHub/mental-math/src/History.js"],"names":["React","R","InlineMath","History","props","previousLatex","previousAnswers","previousGuesses","TableHeader","tableFill","map","x","index","percentError","Math","abs","trunc","errorList","averagedError","reduce","add","length","isNaN"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,OAAnB,CAEA;AACA,MAAO,0BAAP,CACA,OAASC,UAAT,KAA2B,aAA3B,CAIA,GAAIC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,IAEjBC,CAAAA,aAFiB,CAEmCD,KAFnC,CAEjBC,aAFiB,CAEFC,eAFE,CAEmCF,KAFnC,CAEFE,eAFE,CAEeC,eAFf,CAEmCH,KAFnC,CAEeG,eAFf,CAIvB;AACA,GAAIC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,mBACE,8CACE,2CACE,kDADF,cAEE,uCAFF,cAGE,sCAHF,cAIE,mDAJF,CADF,CADF,CAUD,CAXD,CAaA;AACA,GAAIC,CAAAA,SAAS,CAAGJ,aAAa,CAACK,GAAd,CAAkB,SAACC,CAAD,CAAIC,KAAJ,CAAc,CAE9C,GAAIC,CAAAA,YAAY,CAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAW,KAAOV,eAAe,CAACM,KAAD,CAAf,CAAyBL,eAAe,CAACK,KAAD,CAA/C,EAA2DN,eAAe,CAACM,KAAD,CAArF,CAAT,CAAnB,CAEA,mBACE,0BAAI,GAAG,CAAEA,KAAT,eACE,8BAAKD,CAAL,CADF,cAEE,8BAAKL,eAAe,CAACM,KAAD,CAApB,CAFF,cAGE,8BAAKL,eAAe,CAACK,KAAD,CAApB,CAHF,cAIE,8BAAKC,YAAL,KAJF,CADF,CAQD,CAZe,CAAhB,CAcA;AACA,GAAII,CAAAA,SAAS,CAAGX,eAAe,CAACI,GAAhB,CAAoB,SAACC,CAAD,CAAIC,KAAJ,CAAc,CAEhD,GAAIC,CAAAA,YAAY,CAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAW,KAAOV,eAAe,CAACM,KAAD,CAAf,CAAyBL,eAAe,CAACK,KAAD,CAA/C,EAA2DN,eAAe,CAACM,KAAD,CAArF,CAAT,CAAnB,CAEA,MACEC,CAAAA,YADF,CAGD,CAPe,CAAhB,CASA,GAAIK,CAAAA,aAAa,CAAGJ,IAAI,CAACE,KAAL,CAAWf,CAAC,CAACkB,MAAF,CAASlB,CAAC,CAACmB,GAAX,CAAgB,CAAhB,CAAmBH,SAAnB,CAAX,EAA4CA,SAAS,CAACI,MAA1E,CAEA,mBACE,4CAEE,8CACE,oBAAC,WAAD,MADF,cAEE,iCACGZ,SADH,CAFF,CAFF,CASG,CAACa,KAAK,CAACJ,aAAD,CAAN,eACC,4CACE,2DADF,cAEE,oBAAC,UAAD,MAAaA,aAAa,CAAG,6CAAhB,CAAgED,SAAS,CAACI,MAA1E,CAAmF,0BAAhG,CAFF,CAVJ,CADF,CAqBD,CAlED,CAuEA,cAAelB,CAAAA,OAAf","sourcesContent":["import React from 'react'\n\n// Ramda\nimport * as R from 'ramda';\n\n// Latex\nimport 'katex/dist/katex.min.css';\nimport { InlineMath } from 'react-katex';\n\n\n\nlet History = (props) => {\n\n  let { previousLatex, previousAnswers, previousGuesses } = props;\n\n  // Table Header\n  let TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Previous Question</th>\n          <th>Answer</th>\n          <th>Guess</th>\n          <th>Error (Abs. Value)</th>\n        </tr>\n      </thead>\n    )\n  }\n\n  // Table Fill\n  let tableFill = previousLatex.map((x, index) => {\n\n    let percentError = Math.abs(Math.trunc(100 * (previousAnswers[index] - previousGuesses[index]) / (previousAnswers[index])));\n\n    return (\n      <tr key={index}>\n        <td>{x}</td>\n        <td>{previousAnswers[index]}</td>\n        <td>{previousGuesses[index]}</td>\n        <td>{percentError}%</td>\n      </tr>\n    )\n  })\n\n  // Averaged accuracy\n  let errorList = previousAnswers.map((x, index) => {\n\n    let percentError = Math.abs(Math.trunc(100 * (previousAnswers[index] - previousGuesses[index]) / (previousAnswers[index])));\n\n    return (\n      percentError\n    )\n  });\n\n  let averagedError = Math.trunc(R.reduce(R.add, 0, errorList)) / errorList.length;\n\n  return (\n    <div>\n\n      <table>\n        <TableHeader />\n        <tbody>\n          {tableFill}\n        </tbody>\n      </table>\n\n      {!isNaN(averagedError) &&\n        <div>\n          <h3>Overall Error (Abs. Value)</h3>\n          <InlineMath>{averagedError + ' \\\\% \\\\ \\\\mathrm{error} \\\\ \\\\mathrm{on} \\\\ ' + errorList.length + '\\\\ \\\\mathrm{question(s)}'}</InlineMath>\n        </div>\n      }\n\n    </div>\n\n  )\n\n}\n\n\n\n\nexport default History"]},"metadata":{},"sourceType":"module"}